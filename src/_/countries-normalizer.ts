import { Injectable } from '@nestjs/common'

@Injectable()
export class CountriesNormalizer {
  getCountry(originCode: number) {
    return CountriesNormalizer.mappedCountries[originCode.toString()]
  }

  static mappedCountries: {
    [k: string]: {
      readonly country: string;
      readonly countryCode: string | undefined;
    }
  } = {}

  static originCountries = {
    7: 'Russia',
    380: 'Ukraine',
    49: 'Germany',
    44: 'UK',
    33: 'France',
    34: 'Spain',
    46: 'Sweden',
    31: 'Netherlands',
    359: 'Bulgaria',
    212: 'Morocco',
    91: 'India',
    45: 'Denmark',
    351: 'Portugal',
    357: 'Cyprus',
    1000: 'Canada',
    1: 'USA',
    420: 'Czech',
    48: 'Poland',
    40: 'Romania',
    62: 'Indonesia',
    63: 'Philippines',
    998: 'Uzbekistan',
    84: 'Vietnam',
    371: 'Latvia',
    370: 'Lithuania',
    372: 'Estonia',
    381: 'Serbia',
    373: 'Moldova',
    995: 'Georgia',
    77: 'Kazakhstan',
    55: 'Brazil',
    52: 'Mexico',
    54: 'Argentina',
    90: 'Turkey',
    20: 'Egypt',
    972: 'Israel',
    967: 'Yemen',
    852: 'Hong Kong',
    234: 'Nigeria',
    353: 'Ireland',
    225: 'Ivory Coast',
    233: 'Ghana',
    232: 'Sierra Leone',
    254: 'Kenya',
    509: 'Haiti',
    886: 'Taiwan',
    58: 'Venezuela',
    57: 'Colombia',
    60: 'Malaysia',
    504: 'Honduras',
    92: 'Pakistan',
    226: 'Burkina Faso',
    220: 'Gambia',
    992: 'Tajikistan',
    964: 'Iraq',
    98: 'Iran',
    994: 'Azerbaijan',
    93: 'Afghanistan',
    591: 'Bolivia',
    231: 'Liberia',
    94: 'Sri Lanka',
    976: 'Mongolia',
    977: 'Nepal',
    223: 'Mali',
    235: 'Chad',
    358: 'Finland',
    224: 'Guinea',
    30: 'Greece',
    65: 'Singapore',
    375: 'Belarus',
    32: 'Belgium',
    237: 'Cameroon',
    39: 'Italy',
    593: 'Ecuador',
    966: 'Saudi Arabia',
    41: 'Switzerland',
    66: 'Thailand',
    962: 'Jordan',
    389: 'North Macedonia',
    51: 'Peru',
    505: 'Nicaragua',
    249: 'Sudan',
    503: 'Salvador',
    256: 'Uganda',
    260: 'Zambia',
    265: 'Malawi',
    245: 'Guinea Bissau',
    222: 'Mauritania',
    216: 'Tunisia',
    228: 'Togo',
    221: 'Senegal',
    43: 'Austria',
    385: 'Croatia',
    86: 'China',
  }

  static normalCountries = {
    AF: ['Afghanistan'],
    AL: ['Albania'],
    DZ: ['Algeria'],
    AS: ['American Samoa'],
    AD: ['Andorra'],
    AO: ['Angola'],
    AI: ['Anguilla'],
    AQ: ['Antarctica'],
    AG: ['Antigua and Barbuda'],
    AR: ['Argentina'],
    AM: ['Armenia'],
    AW: ['Aruba'],
    AU: ['Australia'],
    AT: ['Austria'],
    AZ: ['Azerbaijan'],
    BS: ['Bahamas'],
    BH: ['Bahrain'],
    BD: ['Bangladesh'],
    BB: ['Barbados'],
    BY: ['Belarus'],
    BE: ['Belgium'],
    BZ: ['Belize'],
    BJ: ['Benin'],
    BM: ['Bermuda'],
    BT: ['Bhutan'],
    BO: ['Bolivia'],
    BA: ['Bosnia and Herzegovina'],
    BW: ['Botswana'],
    BV: ['Bouvet Island'],
    BR: ['Brazil'],
    IO: ['British Indian Ocean Territory'],
    BN: ['Brunei Darussalam'],
    BG: ['Bulgaria'],
    BF: ['Burkina Faso'],
    BI: ['Burundi'],
    KH: ['Cambodia'],
    CM: ['Cameroon'],
    CA: ['Canada'],
    CV: ['Cape Verde'],
    KY: ['Cayman Islands'],
    CF: ['Central African Republic'],
    TD: ['Chad'],
    CL: ['Chile'],
    CN: ['People\'s Republic of China', 'China'],
    CX: ['Christmas Island'],
    CC: ['Cocos (Keeling) Islands'],
    CO: ['Colombia'],
    KM: ['Comoros'],
    CG: ['Republic of the Congo', 'Congo'],
    CD: ['Democratic Republic of the Congo', 'Congo'],
    CK: ['Cook Islands'],
    CR: ['Costa Rica'],
    CI: ['Cote D\'Ivoire', 'Ivory Coast'],
    HR: ['Croatia'],
    CU: ['Cuba'],
    CY: ['Cyprus'],
    CZ: ['Czech Republic', 'Czechia', 'Czech'],
    DK: ['Denmark'],
    DJ: ['Djibouti'],
    DM: ['Dominica'],
    DO: ['Dominican Republic'],
    EC: ['Ecuador'],
    EG: ['Egypt'],
    SV: ['El Salvador', 'Salvador'],
    GQ: ['Equatorial Guinea'],
    ER: ['Eritrea'],
    EE: ['Estonia'],
    ET: ['Ethiopia'],
    FK: ['Falkland Islands (Malvinas)'],
    FO: ['Faroe Islands'],
    FJ: ['Fiji'],
    FI: ['Finland'],
    FR: ['France'],
    GF: ['French Guiana'],
    PF: ['French Polynesia'],
    TF: ['French Southern Territories'],
    GA: ['Gabon'],
    GM: ['Republic of The Gambia', 'The Gambia', 'Gambia'],
    GE: ['Georgia'],
    DE: ['Germany'],
    GH: ['Ghana'],
    GI: ['Gibraltar'],
    GR: ['Greece'],
    GL: ['Greenland'],
    GD: ['Grenada'],
    GP: ['Guadeloupe'],
    GU: ['Guam'],
    GT: ['Guatemala'],
    GN: ['Guinea'],
    GW: ['Guinea Bissau',],
    GY: ['Guyana'],
    HT: ['Haiti'],
    HM: ['Heard Island and McDonald Islands'],
    VA: ['Holy See (Vatican City State)'],
    HN: ['Honduras'],
    HK: ['Hong Kong'],
    HU: ['Hungary'],
    IS: ['Iceland'],
    IN: ['India'],
    ID: ['Indonesia'],
    IR: ['Islamic Republic of Iran', 'Iran'],
    IQ: ['Iraq'],
    IE: ['Ireland'],
    IL: ['Israel'],
    IT: ['Italy'],
    JM: ['Jamaica'],
    JP: ['Japan'],
    JO: ['Jordan'],
    KZ: ['Kazakhstan'],
    KE: ['Kenya'],
    KI: ['Kiribati'],
    KP: ['North Korea'],
    KR: ['South Korea'],
    KW: ['Kuwait'],
    KG: ['Kyrgyzstan'],
    LA: ['Lao People\'s Democratic Republic'],
    LV: ['Latvia'],
    LB: ['Lebanon'],
    LS: ['Lesotho'],
    LR: ['Liberia'],
    LY: ['Libya'],
    LI: ['Liechtenstein'],
    LT: ['Lithuania'],
    LU: ['Luxembourg'],
    MO: ['Macao'],
    MG: ['Madagascar'],
    MW: ['Malawi'],
    MY: ['Malaysia'],
    MV: ['Maldives'],
    ML: ['Mali'],
    MT: ['Malta'],
    MH: ['Marshall Islands'],
    MQ: ['Martinique'],
    MR: ['Mauritania'],
    MU: ['Mauritius'],
    YT: ['Mayotte'],
    MX: ['Mexico'],
    FM: ['Micronesia, Federated States of'],
    MD: ['Moldova, Republic of', 'Moldova'],
    MC: ['Monaco'],
    MN: ['Mongolia'],
    MS: ['Montserrat'],
    MA: ['Morocco'],
    MZ: ['Mozambique'],
    MM: ['Myanmar'],
    NA: ['Namibia'],
    NR: ['Nauru'],
    NP: ['Nepal'],
    NL: ['Netherlands'],
    NC: ['New Caledonia'],
    NZ: ['New Zealand'],
    NI: ['Nicaragua'],
    NE: ['Niger'],
    NG: ['Nigeria'],
    NU: ['Niue'],
    NF: ['Norfolk Island'],
    MK: ['The Republic of North Macedonia', 'North Macedonia'],
    MP: ['Northern Mariana Islands'],
    NO: ['Norway'],
    OM: ['Oman'],
    PK: ['Pakistan'],
    PW: ['Palau'],
    PS: ['State of Palestine', 'Palestine'],
    PA: ['Panama'],
    PG: ['Papua New Guinea'],
    PY: ['Paraguay'],
    PE: ['Peru'],
    PH: ['Philippines'],
    PN: ['Pitcairn'],
    PL: ['Poland'],
    PT: ['Portugal'],
    PR: ['Puerto Rico'],
    QA: ['Qatar'],
    RE: ['Reunion'],
    RO: ['Romania'],
    RU: ['Russian Federation', 'Russia'],
    RW: ['Rwanda'],
    SH: ['Saint Helena'],
    KN: ['Saint Kitts and Nevis'],
    LC: ['Saint Lucia'],
    PM: ['Saint Pierre and Miquelon'],
    VC: ['Saint Vincent and the Grenadines'],
    WS: ['Samoa'],
    SM: ['San Marino'],
    ST: ['Sao Tome and Principe'],
    SA: ['Saudi Arabia'],
    SN: ['Senegal'],
    SC: ['Seychelles'],
    SL: ['Sierra Leone'],
    SG: ['Singapore'],
    SK: ['Slovakia'],
    SI: ['Slovenia'],
    SB: ['Solomon Islands'],
    SO: ['Somalia'],
    ZA: ['South Africa'],
    GS: ['South Georgia and the South Sandwich Islands'],
    ES: ['Spain'],
    LK: ['Sri Lanka'],
    SD: ['Sudan'],
    SR: ['Suriname'],
    SJ: ['Svalbard and Jan Mayen'],
    SZ: ['Eswatini'],
    SE: ['Sweden'],
    CH: ['Switzerland'],
    SY: ['Syrian Arab Republic'],
    TW: ['Taiwan, Province of China', 'Taiwan'],
    TJ: ['Tajikistan'],
    TZ: ['United Republic of Tanzania', 'Tanzania'],
    TH: ['Thailand'],
    TL: ['Timor-Leste'],
    TG: ['Togo'],
    TK: ['Tokelau'],
    TO: ['Tonga'],
    TT: ['Trinidad and Tobago'],
    TN: ['Tunisia'],
    TR: ['Türkiye', 'Turkey'],
    TM: ['Turkmenistan'],
    TC: ['Turks and Caicos Islands'],
    TV: ['Tuvalu'],
    UG: ['Uganda'],
    UA: ['Ukraine'],
    AE: ['United Arab Emirates'],
    GB: ['United Kingdom', 'UK', 'Great Britain'],
    US: ['United States of America', 'United States', 'USA'],
    UM: ['United States Minor Outlying Islands'],
    UY: ['Uruguay'],
    UZ: ['Uzbekistan'],
    VU: ['Vanuatu'],
    VE: ['Venezuela'],
    VN: ['Vietnam'],
    VG: ['Virgin Islands, British'],
    VI: ['Virgin Islands, U.S.'],
    WF: ['Wallis and Futuna'],
    EH: ['Western Sahara'],
    YE: ['Yemen'],
    ZM: ['Zambia'],
    ZW: ['Zimbabwe'],
    AX: ['Åland Islands'],
    BQ: ['Bonaire, Sint Eustatius and Saba'],
    CW: ['Curaçao'],
    GG: ['Guernsey'],
    IM: ['Isle of Man'],
    JE: ['Jersey'],
    ME: ['Montenegro'],
    BL: ['Saint Barthélemy'],
    MF: ['Saint Martin (French part)'],
    RS: ['Serbia'],
    SX: ['Sint Maarten (Dutch part)'],
    SS: ['South Sudan'],
    XK: ['Kosovo'],
  }

  static mapCountries() {
    const originCountriesPairs = Object.entries(CountriesNormalizer.originCountries)
    const normalCountriesPairs = Object.entries(CountriesNormalizer.normalCountries)

    const unmapped: typeof originCountriesPairs = []

    const resultPairs = originCountriesPairs.map((pair) => {
      const [originCode, country] = pair

      const [countryCode] =
        normalCountriesPairs.find(([, aliases]) => aliases.includes(country)) ?? []

      if (!countryCode) {
        unmapped.push(pair)
      }

      const countryItem = { country, countryCode }

      return [originCode, countryItem] as const
    })

    if (unmapped.length > 0) {
      let errorText = ''

      unmapped.forEach(([originCode, country]) => {
        errorText += `${originCode}: ${country} \n`
      })

      throw new Error(errorText)
    }

    const result = Object.fromEntries(resultPairs)

    return result
  }

  static {
    CountriesNormalizer.mappedCountries = CountriesNormalizer.mapCountries()
  }
}
